{"version":3,"sources":["components/Profile/Profile.jsx","components/Statistics/Statistics.jsx","App.jsx","index.jsx"],"names":["Profile","_ref","username","tag","location","avatar","stats","react_default","a","createElement","ProfileWrap","className","Description","Avatar","src","alt","Name","Tag","Location","Stats","Elements","Label","Quantity","followers","views","likes","protoTypes","PropTypes","string","shape","number","styled","div","_templateObject","Object","taggedTemplateLiteral","_templateObject2","img","_templateObject3","p","_templateObject4","_templateObject5","_templateObject6","ul","_templateObject7","li","_templateObject8","span","_templateObject9","_templateObject10","Statistics","_ref$title","title","SectionStats","Title","StatList","map","stat","StatItem","key","id","style","backgroundColor","concat","Math","floor","random","toString","padStart","Span","label","percentage","section","Statistics_templateObject","h2","Statistics_templateObject2","Statistics_templateObject3","Statistics_templateObject4","Statistics_templateObject5","App","Fragment","components_Profile_Profile","user","components_Statistics_Statistics","data","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"2fAIMA,EAAU,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAUC,EAAbF,EAAaE,IAAKC,EAAlBH,EAAkBG,SAAUC,EAA5BJ,EAA4BI,OAAQC,EAApCL,EAAoCK,MAApC,OACdC,EAAAC,EAAAC,cAACC,EAAD,CAAaC,UAAU,aACrBJ,EAAAC,EAAAC,cAACG,EAAD,KACEL,EAAAC,EAAAC,cAACI,EAAD,CAAQC,IAAKT,EAAQU,IAAI,cAAcJ,UAAU,WACjDJ,EAAAC,EAAAC,cAACO,EAAD,CAAML,UAAU,QAAQT,GACxBK,EAAAC,EAAAC,cAACQ,EAAD,CAAKN,UAAU,OAAf,IAAuBR,GACvBI,EAAAC,EAAAC,cAACS,EAAD,CAAUP,UAAU,YAAYP,IAGlCG,EAAAC,EAAAC,cAACU,EAAD,CAAOR,UAAU,SACjBJ,EAAAC,EAAAC,cAACW,EAAD,KACEb,EAAAC,EAAAC,cAACY,EAAD,CAAOV,UAAU,SAAjB,aACAJ,EAAAC,EAAAC,cAACa,EAAD,CAAUX,UAAU,YAAYL,EAAMiB,YAExChB,EAAAC,EAAAC,cAACW,EAAD,KACEb,EAAAC,EAAAC,cAACY,EAAD,CAAOV,UAAU,SAAjB,SACAJ,EAAAC,EAAAC,cAACa,EAAD,CAAUX,UAAU,YAAYL,EAAMkB,QAExCjB,EAAAC,EAAAC,cAACW,EAAD,KACEb,EAAAC,EAAAC,cAACY,EAAD,CAAOV,UAAU,SAAjB,SACAJ,EAAAC,EAAAC,cAACa,EAAD,CAAUX,UAAU,YAAYL,EAAMmB,WAM5CzB,EAAQ0B,WAAa,CACnBxB,SAAUyB,IAAUC,OACpBzB,IAAKwB,IAAUC,OACfxB,SAAUuB,IAAUC,OACpBvB,OAAQsB,IAAUC,OAClBtB,MAAOqB,IAAUE,MAAM,CACrBN,UAAYI,IAAUG,OACtBN,MAAQG,IAAUG,OAClBL,MAAQE,IAAUG,UAGP9B,kBAETU,EAAcqB,IAAOC,IAAVC,MAAAC,OAAAC,EAAA,EAAAD,CAAA,qWAWXtB,EAAcmB,IAAOC,IAAVI,MAAAF,OAAAC,EAAA,EAAAD,CAAA,gGAOXrB,EAASkB,IAAOM,IAAVC,MAAAJ,OAAAC,EAAA,EAAAD,CAAA,qJAMNlB,EAAOe,IAAOQ,EAAVC,MAAAN,OAAAC,EAAA,EAAAD,CAAA,+CAKJjB,EAAMc,IAAOQ,EAAVE,MAAAP,OAAAC,EAAA,EAAAD,CAAA,4BAIHhB,EAAWa,IAAOQ,EAAVG,MAAAR,OAAAC,EAAA,EAAAD,CAAA,+BAIRf,EAAQY,IAAOY,GAAVC,MAAAV,OAAAC,EAAA,EAAAD,CAAA,sOASLd,EAAWW,IAAOc,GAAVC,MAAAZ,OAAAC,EAAA,EAAAD,CAAA,gGAORb,EAAQU,IAAOgB,KAAVC,MAAAd,OAAAC,EAAA,EAAAD,CAAA,2CAKLZ,EAAWS,IAAOgB,KAAVE,MAAAf,OAAAC,EAAA,EAAAD,CAAA,6DC3Fd,IAsBegB,EAtBI,SAAAjD,GAAA,IAAAkD,EAAAlD,EAAGmD,aAAH,IAAAD,EAAS,GAATA,EAAa7C,EAAbL,EAAaK,MAAb,OACfC,EAAAC,EAAAC,cAAC4C,EAAD,CAAc1C,UAAU,cACtBJ,EAAAC,EAAAC,cAAC6C,EAAD,CAAO3C,UAAU,SAASyC,GAC1B7C,EAAAC,EAAAC,cAAC8C,EAAD,CAAU5C,UAAU,aACjBL,EAAMkD,IAAI,SAAAC,GAAI,OACXlD,EAAAC,EAAAC,cAACiD,EAAD,CAAUC,IAAKF,EAAKG,GAAIC,MAAO,CAAEC,gBAV3C,IAAAC,OAAWC,KAAKC,MAAsB,SAAhBD,KAAKE,UACxBC,SAAS,IACTC,SAAS,EAAG,MASD7D,EAAAC,EAAAC,cAAC4D,EAAD,CAAM1D,UAAU,SAAS8C,EAAKa,OAC9B/D,EAAAC,EAAAC,cAAC4D,EAAD,CAAM1D,UAAU,cAAc8C,EAAKc,WAAnC,WAiBVlB,EAAetB,IAAOyC,QAAVC,MAAAvC,OAAAC,EAAA,EAAAD,CAAA,yWAWZoB,EAAQvB,IAAO2C,GAAVC,MAAAzC,OAAAC,EAAA,EAAAD,CAAA,4BAILqB,EAAWxB,IAAOY,GAAViC,MAAA1C,OAAAC,EAAA,EAAAD,CAAA,kSASRwB,EAAW3B,IAAOc,GAAVgC,MAAA3C,OAAAC,EAAA,EAAAD,CAAA,+QAWRmC,EAAOtC,IAAOgB,KAAV+B,MAAA5C,OAAAC,EAAA,EAAAD,CAAA,yDC7CK6C,MAjBf,WACE,OACExE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwE,SAAA,KACAzE,EAAAC,EAAAC,cAACwE,EAAD,CACA/E,SAAUgF,EAAKhF,SACfC,IAAK+E,EAAK/E,IACVC,SAAU8E,EAAK9E,SACfC,OAAQ6E,EAAK7E,OACbC,MAAO4E,EAAK5E,QAEVC,EAAAC,EAAAC,cAAC0E,EAAD,CAAY7E,MAAO8E,MCXZC,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHlF,EAAAC,EAAAC,cAACF,EAAAC,EAAMkF,WAAP,KACEnF,EAAAC,EAAAC,cAACkF,EAAD","file":"static/js/main.83e03638.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Profile = ({ username, tag, location, avatar, stats }) => (\n  <ProfileWrap className=\"container\">\n    <Description>\n      <Avatar src={avatar} alt=\"User avatar\" className=\"avatar\" />\n      <Name className=\"name\">{username}</Name>\n      <Tag className=\"tag\">@{tag}</Tag>\n      <Location className=\"location\">{location}</Location>\n    </Description>\n    \n    <Stats className=\"stats\">\n    <Elements>\n      <Label className=\"label\">Followers</Label>\n      <Quantity className=\"quantity\">{stats.followers}</Quantity>\n    </Elements>\n    <Elements>\n      <Label className=\"label\">Views</Label>\n      <Quantity className=\"quantity\">{stats.views}</Quantity>\n    </Elements>\n    <Elements>\n      <Label className=\"label\">Likes</Label>\n      <Quantity className=\"quantity\">{stats.likes}</Quantity>\n    </Elements>\n  </Stats>\n  </ProfileWrap>\n);\n\nProfile.protoTypes = {\n  username: PropTypes.string,\n  tag: PropTypes.string,\n  location: PropTypes.string,\n  avatar: PropTypes.string,\n  stats: PropTypes.shape({\n    followers:  PropTypes.number,\n    views:  PropTypes.number,\n    likes:  PropTypes.number\n  }),\n};\nexport default Profile;\n\nconst ProfileWrap = styled.div`\nfont-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\nfont-size: 18px;\nwidth:400px;\nbackground: rgb(207 209 245);\nmargin: 10px auto;\npadding: 15px;\nborder-radius: 10px;\nbox-shadow: -10px 0px 13px -7px #000000, 10px 0px 13px -7px #000000, 8px -8px 15px -16px rgba(0,0,0,0);\n`\n\nconst Description = styled.div`\ndisplay:flex;\njustify-content:center;\nalign-items:center;\nflex-direction: column;\n`\n\nconst Avatar = styled.img`\nborder-radius:60%;\nwidth:300px;\nbox-shadow: -10px 0px 13px -7px #000000, 10px 0px 13px -7px #000000, 8px -8px 15px -16px rgba(0,0,0,0);\n`\n\nconst Name = styled.p`\nfont-size: 25px;\nfont-weight: 600;\n`\n\nconst Tag = styled.p`\nfont-size: 16px;\n`\n\nconst Location = styled.p`\nfont-style: italic;\n`\n\nconst Stats = styled.ul`\ndisplay:flex;\njustify-content:space-evenly;\nalign-items:center;\nborder: 1px solid black;\nborder-radius: 10px;\nbox-shadow: -10px 0px 13px -7px #000000, 10px 0px 13px -7px #000000, 8px -8px 15px -16px rgba(0,0,0,0);\n`\n\nconst Elements = styled.li`\ndisplay:flex;\njustify-content:center;\nalign-items:center;\nflex-direction: column;\n`\n\nconst Label = styled.span`\nfont-size:17px;\nmargin:10px 0;\n`\n\nconst Quantity = styled.span`\nfont-size:17px;\nfont-weight:500;\nmargin:10px 0;\n`\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction getRandomHexColor() {\r\n  return `#${Math.floor(Math.random() * 16578322)\r\n    .toString(16)\r\n    .padStart(6, 0)}`;\r\n}\r\n\r\nconst Statistics = ({ title=\"\", stats }) => (\r\n    <SectionStats className=\"statistics\">\r\n      <Title className=\"title\">{title}</Title>\r\n      <StatList className=\"stat-list\">\r\n        {stats.map(stat => (\r\n            <StatItem key={stat.id} style={{ backgroundColor: getRandomHexColor() }}>\r\n                <Span className=\"label\">{stat.label}</Span>\r\n                <Span className=\"percentage\">{stat.percentage}%</Span>\r\n            </StatItem>\r\n        ))}\r\n      </StatList>\r\n    </SectionStats>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf({\r\n    id: PropTypes.string,\r\n    label: PropTypes.string,\r\n    percentage: PropTypes.number, \r\n  }),\r\n}\r\nexport default Statistics;\r\n\r\nconst SectionStats = styled.section`\r\nfont-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\r\nfont-size: 18px;\r\nmax-width:800px;\r\nbackground: rgb(207 209 245);\r\nmargin: 10px auto;\r\npadding: 15px;\r\nborder-radius: 10px;\r\nbox-shadow: -10px 0px 13px -7px #000000, 10px 0px 13px -7px #000000, 8px -8px 15px -16px rgba(0,0,0,0);\r\n`\r\n\r\nconst Title = styled.h2`\r\n  display: none;\r\n`\r\n\r\nconst StatList = styled.ul`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit,minmax(80px,150px));\r\n  justify-content: center;\r\n  background-color: rgb(212, 213, 233);\r\n  border-radius: 5px;\r\n  box-shadow: -10px 0px 13px -7px #1b1c25, 10px 0px 13px -7px #1b1c25, 8px -8px 15px -16px rgba(0,0,0,0);\r\n`\r\n\r\nconst StatItem = styled.li`\r\n  display: grid;\r\n  justify-items: center;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 10px;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  box-shadow: -10px 0px 13px -7px #1b1c25, 10px 0px 13px -7px #1b1c25, 8px -8px 15px -16px rgba(0,0,0,0);\r\n`\r\n\r\nconst Span = styled.span`\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n`\r\n","import React from \"react\";\nimport user from './user.json';\nimport data from './data.json';\nimport Profile from \"./components/Profile/Profile\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <>\n    <Profile\n    username={user.username}\n    tag={user.tag}\n    location={user.location}\n    avatar={user.avatar}\n    stats={user.stats}\n    />\n      <Statistics stats={data} />\n    </>\n  )\n\n\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\n\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}